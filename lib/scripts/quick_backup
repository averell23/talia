#!/usr/bin/env ruby
require 'yaml'
require 'fileutils'

TALIA_ROOT = File.join(File.dirname(__FILE__), '..', '..')

talia_conf = YAML.load_file(File.join(TALIA_ROOT, 'config', 'talia_core.yml'))
rdf_conf = YAML.load_file(File.join(TALIA_ROOT, 'config', 'rdfstore.yml'))
db_conf = YAML.load_file(File.join(TALIA_ROOT, 'config', 'database.yml'))

if(ARGV.size == 0 || ARGV.include?('-help') || (ARGV[0] != 'backup' && ARGV[0] != 'restore'))
  puts "usage: quick_backup (backup|restore) [-data] [-iip] [-help]"
  exit 1
end

mode = ARGV[0].to_sym

print "We need the mySQL root pass here: "
root_pw = STDIN.gets.chomp.strip
root_pw = "-p#{root_pw}" if(root_pw != '')

if(mode == :backup)
  backup_dir = "backup-#{Time.now.strftime('%Y%m%d-%H%M%S')}"
  FileUtils.mkdir backup_dir
  puts "Backing up database..."
  %w(production development).each do |env|
    `mysqldump -u root #{root_pw} #{db_conf[env]['database']} > #{backup_dir}/#{env}.sql`
    FileUtils.cp_r(rdf_conf[env]['location'], File.join(backup_dir, "sesame_#{env}.db"), :verbose => true)
  end
  if(ARGV.include?('-data'))
    puts "Backing up normal data..."
    data_dir = talia_conf['data_directory_location'] || './data/'
    FileUtils.cp_r( data_dir, File.join(backup_dir, 'data'), :verbose => true)
  end
  if(ARGV.include?('-iip'))
    puts "Backing up iip data..."
    iip_dir = talia_conf['iip_root_directory_location'] || './iip_root/'
    FileUtils.cp_r(iip_dir, File.join(backup_dir, 'iip_root'), :verbose => true)
  end
  puts "Making tarball..."
  `tar czf #{backup_dir}.tar.gz #{backup_dir}`
  puts "Cleaning up..."
  FileUtils.rm_rf backup_dir
  puts 'Done.'
else
  if(ARGV.size < 2 || ARGV[1][0..0] == '-')
    puts 'Wrong params for restore.'
    exit 1
  end
  backup_dir = ARGV[1]
  unless(File.exists?(backup_dir))
    puts "Backup Directory does not exist: #{backup_dir}"
    exit 1
  end
  puts "Restoring database..."
  %w(production development).each do |env|
    `mysql -u root #{root_pw} #{db_conf[env]['database']} < #{backup_dir}/#{env}.sql`
    FileUtils.rm_rf rdf_conf[env]['location']
    if(sesame = File.exists?(File.join(backup_dir, "sesame_#{env}.db")))
      FileUtils.cp_r(sesame, rdf_conf[env]['location'], :verbose => true)
    end
  end
  if(File.exists?(File.join(backup_dir, 'data')))
    puts "Restoring data..."
    data_dir = talia_conf['data_directory_location'] || './data/'
    FileUtils.cp_r(File.join(backup_dir, 'data'), data_dir, :verbose => true)
  end
  if(File.exists?(File.join(backup_dir, 'iip_root')))
    puts "Restoring iip data..."
    iip_dir = talia_conf['iip_root_directory_location'] || './iip_root/'
    FileUtils.cp_r(File.join(backup_dir, 'iip_root', iip_dir), :verbose => true)
  end
end