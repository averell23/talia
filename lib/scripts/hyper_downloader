#!/usr/bin/ruby

$: << File.join(File.dirname(__FILE__), '..', '..', 'vendor', 'plugins', 'talia_core', 'lib')
$: << File.join(File.dirname(__FILE__), '..', '..', 'app', 'models')

# Quick script to download exported xml files from NietzscheSource for testing
require 'progressbar'
require 'talia_util/hyper_download'

if(ARGV[0] == '--help')
  puts "Usage: hyper_downloader <output_path> <file_mode> <list_file>"
  exit 1
end

output_path = ARGV[0]
output_path ||= File.join(File.dirname(__FILE__), '..', '..', 'hyper_download')

dl = HyperDownload::Downloader.new(output_path)
# Set the file mode if there is one
dl.file_mode = ARGV[1] if(ARGV[1])

list_file = [ ARGV[2] ] if(ARGV[2])
list_file ||= [ "http://www.hypernietzsche.org/exportToTalia.php?getList=all", { :http_basic_authentication => ["nietzsche", "source"] } ]

success_sigla = []
failed_sigla = []

xml_doc = nil

open(*list_file) do |io|
  xml_doc = REXML::Document.new(io.read)
end

puts "Fetching #{xml_doc.root.elements.size} elements"

progress = ProgressBar.new("Downloading", xml_doc.root.elements.size)

xml_doc.root.elements.each("siglum") do |element|
  progress.inc
  siglum = element.text.strip
  if(dl.grab_siglum(siglum))
    success_sigla << siglum
  else
    failed_sigla << siglum
  end
end

puts
puts "Download finished. Downloaded #{success_sigla.size} elements sucessfully, #{failed_sigla.size} failed."
puts "Index files will be written to the output directory named index*.xml"

dl.write_index_file('index_success.xml', success_sigla)
dl.write_index_file('index_failed.xml', failed_sigla)
File.open(File.join(output_path, 'index.xml'), 'w') { |io| xml_doc.write(io) }

progress.finish
  